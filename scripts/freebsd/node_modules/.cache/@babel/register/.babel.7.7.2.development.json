{
  "{\"sourceRoot\":\"/usr/home/pouya/Projects/meteor/scripts/freebsd\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/usr/home/pouya/Projects/meteor/scripts/freebsd\",\"filename\":\"/usr/home/pouya/Projects/meteor/scripts/freebsd/bootstrap.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/usr/home/pouya/Projects/meteor/scripts/freebsd\",\"plugins\":[{\"key\":\"syntax-flow\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":true}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":true}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":true}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":true}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassProperty\":{\"enter\":[null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/usr/home/pouya/Projects/meteor/scripts/freebsd",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/usr/home/pouya/Projects/meteor/scripts/freebsd",
      "filename": "/usr/home/pouya/Projects/meteor/scripts/freebsd/bootstrap.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/usr/home/pouya/Projects/meteor/scripts/freebsd",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-flow",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-optional-chaining",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassProperty": {
              "enter": [
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/usr/home/pouya/Projects/meteor/scripts/freebsd/bootstrap.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "nullishCoalescingOperator",
          "nullishCoalescingOperator",
          "optionalChaining",
          "optionalChaining",
          "optionalCatchBinding",
          "optionalCatchBinding",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "classProperties",
          "classPrivateProperties",
          "asyncGenerators",
          "asyncGenerators",
          "objectRestSpread",
          "objectRestSpread",
          [
            "flow",
            {}
          ]
        ]
      },
      "generatorOpts": {
        "filename": "/usr/home/pouya/Projects/meteor/scripts/freebsd/bootstrap.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/usr/home/pouya/Projects/meteor/scripts/freebsd",
        "sourceFileName": "bootstrap.js"
      }
    },
    "ast": null,
    "code": "var main = require('../../tools/cli/main.js');\n\nvar _ = require('underscore');\n\nvar files = require('../../tools/fs/files');\n\nvar buildmessage = require('../../tools/utils/buildmessage.js');\n\nvar config = require('../../tools/meteor-services/config.js');\n\nvar utils = require('../../tools/utils/utils.js');\n\nvar catalog = require('../../tools/packaging/catalog/catalog.js');\n\nvar catalogRemote = require('../../tools/packaging/catalog/catalog-remote.js');\n\nvar isopack = require('../../tools/isobuild/isopack.js');\n\nvar Console = require('../../tools/console/console.js').Console;\n\nvar catalogUtils = require('../../tools/packaging/catalog/catalog-utils.js');\n\nvar packageMapModule = require('../../tools/packaging/package-map.js');\n\nvar packageClient = require('../../tools/packaging/package-client.js');\n\nvar tropohouse = require('../../tools/packaging/tropohouse.js');\n\nvar argv = require('minimist')(process.argv);\n\nconsole.log(argv);\n\nvar makeBootstrapTarballsFreeBSD = function (options) {\n  var releaseNameAndVersion = options.args[0]; // We get this as an argument, so it is an OS path. Make it a standard path.\n\n  var outputDirectory = files.convertToStandardPath(options.args[1]);\n  var trackAndVersion = catalogUtils.splitReleaseName(releaseNameAndVersion);\n  var releaseTrack = trackAndVersion[0];\n  var releaseVersion = trackAndVersion[1];\n  var releaseRecord = catalog.official.getReleaseVersion(releaseTrack, releaseVersion);\n\n  if (!releaseRecord) {\n    // XXX this could also mean package unknown.\n    Console.error('Release unknown: ' + releaseNameAndVersion + '');\n    return 1;\n  }\n\n  var toolPackageVersion = releaseRecord.tool && utils.parsePackageAndVersion(releaseRecord.tool);\n\n  if (!toolPackageVersion) {\n    throw new Error(\"bad tool in release: \" + releaseRecord.tool);\n  }\n\n  var toolPackage = toolPackageVersion.package;\n  var toolVersion = toolPackageVersion.version;\n  var toolPkgBuilds = catalog.official.getAllBuilds(toolPackage, toolVersion);\n\n  if (!toolPkgBuilds) {\n    // XXX this could also mean package unknown.\n    Console.error('Tool version unknown: ' + releaseRecord.tool);\n    return 1;\n  }\n\n  if (!toolPkgBuilds.length) {\n    Console.error('Tool version has no builds: ' + releaseRecord.tool);\n    return 1;\n  } // XXX check to make sure this is the three arches that we want? it's easier\n  // during 0.9.0 development to allow it to just decide \"ok, i just want to\n  // build the OSX tarball\" though.\n\n\n  var buildArches = _.pluck(toolPkgBuilds, 'buildArchitectures');\n\n  var osArches = _.map(buildArches, function (buildArch) {\n    var subArches = buildArch.split('+');\n\n    var osArches = _.filter(subArches, function (subArch) {\n      return subArch.substr(0, 3) === 'os.';\n    });\n\n    if (osArches.length !== 1) {\n      throw Error(\"build architecture \" + buildArch + \"  lacks unique os.*\");\n    }\n\n    return osArches[0];\n  });\n\n  if (options['target-arch']) {\n    // check if the passed arch is in the list\n    var arch = options['target-arch'];\n\n    if (!_.contains(osArches, arch)) {\n      throw new Error(arch + \": the arch is not available for the release. Available arches: \" + osArches.join(', '));\n    } // build only for the selected arch\n\n\n    osArches = [arch];\n  }\n\n  Console.error('Building bootstrap tarballs for architectures ' + osArches.join(', ')); // Before downloading anything, check that the catalog contains everything we\n  // need for the OSes that the tool is built for.\n\n  main.captureAndExit(\"=> Errors finding builds:\", function () {\n    _.each(osArches, function (osArch) {\n      _.each(releaseRecord.packages, function (pkgVersion, pkgName) {\n        buildmessage.enterJob({\n          title: \"looking up \" + pkgName + \"@\" + pkgVersion + \" on \" + osArch\n        }, function () {\n          if (!catalog.official.getBuildsForArches(pkgName, pkgVersion, [osArch])) {\n            buildmessage.error(\"missing build of \" + pkgName + \"@\" + pkgVersion + \" for \" + osArch);\n          }\n        });\n      });\n    });\n  });\n  files.mkdir_p(outputDirectory); // Get a copy of the data.json.\n\n  var dataTmpdir = files.mkdtemp();\n  var tmpDataFile = files.pathJoin(dataTmpdir, 'packages.data.db');\n  var tmpCatalog = new catalogRemote.RemoteCatalog();\n  tmpCatalog.initialize({\n    packageStorage: tmpDataFile\n  });\n\n  try {\n    packageClient.updateServerPackageData(tmpCatalog, null);\n  } catch (err) {\n    packageClient.handlePackageServerConnectionError(err);\n    return 2;\n  } // Since we're making bootstrap tarballs, we intend to recommend this release,\n  // so we should ensure that once it is downloaded, it knows it is recommended\n  // rather than having a little identity crisis and thinking that a past\n  // release is the latest recommended until it manages to sync.\n\n\n  tmpCatalog.forceRecommendRelease(releaseTrack, releaseVersion);\n  tmpCatalog.closePermanently();\n\n  if (files.exists(tmpDataFile + '-wal')) {\n    throw Error(\"Write-ahead log still exists for \" + tmpDataFile + \" so the data file will be incomplete!\");\n  }\n\n  var packageMap = packageMapModule.PackageMap.fromReleaseVersion(releaseRecord);\n\n  _.each(osArches, function (osArch) {\n    var tmpdir = files.mkdtemp();\n    Console.info(\"Building tarball for \" + osArch); // when building for Windows architectures, build Windows-specific\n    // tropohouse and bootstrap tarball\n\n    var targetPlatform;\n\n    if (/win/i.test(osArch)) {\n      targetPlatform = \"win32\";\n    } // We're going to build and tar up a tropohouse in a temporary directory.\n\n\n    var tmpTropo = new tropohouse.Tropohouse(files.pathJoin(tmpdir, '.meteor'), {\n      platform: targetPlatform\n    });\n    main.captureAndExit(\"=> Errors downloading packages for \" + osArch + \":\", function () {\n      tmpTropo.downloadPackagesMissingFromMap(packageMap, {\n        serverArchitectures: [osArch]\n      });\n    }); // Install the sqlite DB file we synced earlier. We have previously\n    // confirmed that the \"-wal\" file (which could contain extra log entries\n    // that haven't been flushed to the main file yet) doesn't exist, so we\n    // don't have to copy it.\n\n    files.copyFile(tmpDataFile, config.getPackageStorage({\n      root: tmpTropo.root\n    })); // Create the top-level 'meteor' symlink, which links to the latest tool's\n    // meteor shell script.\n\n    var toolIsopackPath = tmpTropo.packagePath(toolPackage, toolVersion);\n    var toolIsopack = new isopack.Isopack();\n    toolIsopack.initFromPath(toolPackage, toolIsopackPath);\n\n    var toolRecord = _.findWhere(toolIsopack.toolsOnDisk, {\n      arch: osArch\n    });\n\n    if (!toolRecord) {\n      throw Error(\"missing tool for \" + osArch);\n    }\n\n    tmpTropo.linkToLatestMeteor(files.pathJoin(tmpTropo.packagePath(toolPackage, toolVersion, true), toolRecord.path, 'meteor'));\n\n    if (options.unpacked) {\n      files.cp_r(tmpTropo.root, outputDirectory);\n    } else {\n      files.createTarball(tmpTropo.root, files.pathJoin(outputDirectory, 'meteor-bootstrap-' + osArch + '.tar.gz'));\n    }\n  });\n\n  return 0;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "bootstrap.js"
      ],
      "names": [
        "main",
        "require",
        "_",
        "files",
        "buildmessage",
        "config",
        "utils",
        "catalog",
        "catalogRemote",
        "isopack",
        "Console",
        "catalogUtils",
        "packageMapModule",
        "packageClient",
        "tropohouse",
        "argv",
        "process",
        "console",
        "log",
        "makeBootstrapTarballsFreeBSD",
        "options",
        "releaseNameAndVersion",
        "args",
        "outputDirectory",
        "convertToStandardPath",
        "trackAndVersion",
        "splitReleaseName",
        "releaseTrack",
        "releaseVersion",
        "releaseRecord",
        "official",
        "getReleaseVersion",
        "error",
        "toolPackageVersion",
        "tool",
        "parsePackageAndVersion",
        "Error",
        "toolPackage",
        "package",
        "toolVersion",
        "version",
        "toolPkgBuilds",
        "getAllBuilds",
        "length",
        "buildArches",
        "pluck",
        "osArches",
        "map",
        "buildArch",
        "subArches",
        "split",
        "filter",
        "subArch",
        "substr",
        "arch",
        "contains",
        "join",
        "captureAndExit",
        "each",
        "osArch",
        "packages",
        "pkgVersion",
        "pkgName",
        "enterJob",
        "title",
        "getBuildsForArches",
        "mkdir_p",
        "dataTmpdir",
        "mkdtemp",
        "tmpDataFile",
        "pathJoin",
        "tmpCatalog",
        "RemoteCatalog",
        "initialize",
        "packageStorage",
        "updateServerPackageData",
        "err",
        "handlePackageServerConnectionError",
        "forceRecommendRelease",
        "closePermanently",
        "exists",
        "packageMap",
        "PackageMap",
        "fromReleaseVersion",
        "tmpdir",
        "info",
        "targetPlatform",
        "test",
        "tmpTropo",
        "Tropohouse",
        "platform",
        "downloadPackagesMissingFromMap",
        "serverArchitectures",
        "copyFile",
        "getPackageStorage",
        "root",
        "toolIsopackPath",
        "packagePath",
        "toolIsopack",
        "Isopack",
        "initFromPath",
        "toolRecord",
        "findWhere",
        "toolsOnDisk",
        "linkToLatestMeteor",
        "path",
        "unpacked",
        "cp_r",
        "createTarball"
      ],
      "mappings": "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",
      "sourceRoot": "/usr/home/pouya/Projects/meteor/scripts/freebsd",
      "sourcesContent": [
        "var main = require('../../tools/cli/main.js');\nvar _ = require('underscore');\nvar files = require('../../tools/fs/files');\nvar buildmessage = require('../../tools/utils/buildmessage.js');\nvar config = require('../../tools/meteor-services/config.js');\nvar utils = require('../../tools/utils/utils.js');\nvar catalog = require('../../tools/packaging/catalog/catalog.js');\nvar catalogRemote = require('../../tools/packaging/catalog/catalog-remote.js');\nvar isopack = require('../../tools/isobuild/isopack.js');\nvar Console = require('../../tools/console/console.js').Console;\nvar catalogUtils = require('../../tools/packaging/catalog/catalog-utils.js');\n\nvar packageMapModule = require('../../tools/packaging/package-map.js');\nvar packageClient = require('../../tools/packaging/package-client.js');\nvar tropohouse = require('../../tools/packaging/tropohouse.js');\n\nconst argv = require('minimist')(process.argv);\n\nconsole.log(argv);\n\nconst makeBootstrapTarballsFreeBSD = options => {\n  var releaseNameAndVersion = options.args[0];\n\n  // We get this as an argument, so it is an OS path. Make it a standard path.\n  var outputDirectory = files.convertToStandardPath(options.args[1]);\n\n  var trackAndVersion = catalogUtils.splitReleaseName(releaseNameAndVersion);\n  var releaseTrack = trackAndVersion[0];\n  var releaseVersion = trackAndVersion[1];\n\n  var releaseRecord = catalog.official.getReleaseVersion(\n    releaseTrack, releaseVersion);\n  if (!releaseRecord) {\n    // XXX this could also mean package unknown.\n    Console.error('Release unknown: ' + releaseNameAndVersion + '');\n    return 1;\n  }\n\n  var toolPackageVersion = releaseRecord.tool &&\n    utils.parsePackageAndVersion(releaseRecord.tool);\n  if (!toolPackageVersion) {\n    throw new Error(\"bad tool in release: \" + releaseRecord.tool);\n  }\n  var toolPackage = toolPackageVersion.package;\n  var toolVersion = toolPackageVersion.version;\n\n  var toolPkgBuilds = catalog.official.getAllBuilds(\n    toolPackage, toolVersion);\n  if (!toolPkgBuilds) {\n    // XXX this could also mean package unknown.\n    Console.error('Tool version unknown: ' + releaseRecord.tool);\n    return 1;\n  }\n  if (!toolPkgBuilds.length) {\n    Console.error('Tool version has no builds: ' + releaseRecord.tool);\n    return 1;\n  }\n\n  // XXX check to make sure this is the three arches that we want? it's easier\n  // during 0.9.0 development to allow it to just decide \"ok, i just want to\n  // build the OSX tarball\" though.\n  var buildArches = _.pluck(toolPkgBuilds, 'buildArchitectures');\n  var osArches = _.map(buildArches, function (buildArch) {\n    var subArches = buildArch.split('+');\n    var osArches = _.filter(subArches, function (subArch) {\n      return subArch.substr(0, 3) === 'os.';\n    });\n    if (osArches.length !== 1) {\n      throw Error(\"build architecture \" + buildArch + \"  lacks unique os.*\");\n    }\n    return osArches[0];\n  });\n\n  if (options['target-arch']) {\n    // check if the passed arch is in the list\n    var arch = options['target-arch'];\n    if (!_.contains(osArches, arch)) {\n      throw new Error(\n        arch + \": the arch is not available for the release. Available arches: \"\n        + osArches.join(', '));\n    }\n\n    // build only for the selected arch\n    osArches = [arch];\n  }\n\n  Console.error(\n    'Building bootstrap tarballs for architectures ' + osArches.join(', '));\n\n  // Before downloading anything, check that the catalog contains everything we\n  // need for the OSes that the tool is built for.\n  main.captureAndExit(\"=> Errors finding builds:\", function () {\n    _.each(osArches, function (osArch) {\n      _.each(releaseRecord.packages, function (pkgVersion, pkgName) {\n        buildmessage.enterJob({\n          title: \"looking up \" + pkgName + \"@\" + pkgVersion + \" on \" + osArch\n        }, function () {\n          if (!catalog.official.getBuildsForArches(pkgName, pkgVersion, [osArch])) {\n            buildmessage.error(\"missing build of \" + pkgName + \"@\" + pkgVersion +\n              \" for \" + osArch);\n          }\n        });\n      });\n    });\n  });\n\n  files.mkdir_p(outputDirectory);\n\n  // Get a copy of the data.json.\n  var dataTmpdir = files.mkdtemp();\n  var tmpDataFile = files.pathJoin(dataTmpdir, 'packages.data.db');\n\n  var tmpCatalog = new catalogRemote.RemoteCatalog();\n  tmpCatalog.initialize({\n    packageStorage: tmpDataFile\n  });\n  try {\n    packageClient.updateServerPackageData(tmpCatalog, null);\n  } catch (err) {\n    packageClient.handlePackageServerConnectionError(err);\n    return 2;\n  }\n\n  // Since we're making bootstrap tarballs, we intend to recommend this release,\n  // so we should ensure that once it is downloaded, it knows it is recommended\n  // rather than having a little identity crisis and thinking that a past\n  // release is the latest recommended until it manages to sync.\n  tmpCatalog.forceRecommendRelease(releaseTrack, releaseVersion);\n  tmpCatalog.closePermanently();\n  if (files.exists(tmpDataFile + '-wal')) {\n    throw Error(\"Write-ahead log still exists for \" + tmpDataFile\n      + \" so the data file will be incomplete!\");\n  }\n\n  var packageMap =\n    packageMapModule.PackageMap.fromReleaseVersion(releaseRecord);\n\n  _.each(osArches, function (osArch) {\n    var tmpdir = files.mkdtemp();\n    Console.info(\"Building tarball for \" + osArch);\n\n    // when building for Windows architectures, build Windows-specific\n    // tropohouse and bootstrap tarball\n    var targetPlatform;\n    if (/win/i.test(osArch)) {\n      targetPlatform = \"win32\";\n    }\n\n    // We're going to build and tar up a tropohouse in a temporary directory.\n    var tmpTropo = new tropohouse.Tropohouse(\n      files.pathJoin(tmpdir, '.meteor'),\n      { platform: targetPlatform });\n\n    main.captureAndExit(\n      \"=> Errors downloading packages for \" + osArch + \":\",\n      function () {\n        tmpTropo.downloadPackagesMissingFromMap(packageMap, {\n          serverArchitectures: [osArch]\n        });\n      }\n    );\n\n    // Install the sqlite DB file we synced earlier. We have previously\n    // confirmed that the \"-wal\" file (which could contain extra log entries\n    // that haven't been flushed to the main file yet) doesn't exist, so we\n    // don't have to copy it.\n    files.copyFile(tmpDataFile, config.getPackageStorage({\n      root: tmpTropo.root\n    }));\n\n    // Create the top-level 'meteor' symlink, which links to the latest tool's\n    // meteor shell script.\n    var toolIsopackPath =\n      tmpTropo.packagePath(toolPackage, toolVersion);\n    var toolIsopack = new isopack.Isopack;\n    toolIsopack.initFromPath(toolPackage, toolIsopackPath);\n    var toolRecord = _.findWhere(toolIsopack.toolsOnDisk, { arch: osArch });\n    if (!toolRecord) {\n      throw Error(\"missing tool for \" + osArch);\n    }\n\n    tmpTropo.linkToLatestMeteor(files.pathJoin(\n      tmpTropo.packagePath(toolPackage, toolVersion, true),\n      toolRecord.path,\n      'meteor'));\n\n    if (options.unpacked) {\n      files.cp_r(tmpTropo.root, outputDirectory);\n    } else {\n      files.createTarball(\n        tmpTropo.root,\n        files.pathJoin(outputDirectory,\n          'meteor-bootstrap-' + osArch + '.tar.gz'));\n    }\n  });\n\n  return 0;\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1574069036896
  }
}